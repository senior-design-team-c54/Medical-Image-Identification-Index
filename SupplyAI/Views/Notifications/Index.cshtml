@using Microsoft.AspNet.Identity;
@using MI3.Models;

@{
    ViewBag.Title = "Notifications";
}

<h2>Notifications.</h2>
<hr />

<head>
    <style>
        .notif_title {
            text-decoration: none;
        }

        .notif-div-new {
            padding-top: 15px;
            padding-bottom: 20px;
            margin-bottom: 20px;
            background-color: #c6deff;
            border-radius: 10px;
            margin: 10px;
            display: inline-block;
            clear: both;
        }

        .notif-div-resolved {
            padding-top: 15px;
            padding-bottom: 20px;
            margin-bottom: 20px;
            background-color: #eee;
            border-radius: 10px;
            margin: 10px;
            display: inline-block;
            clear: both;
        }

        .notif-div-new:hover {
            background-color: #a0cfec;
        }
    </style>
</head>

<div style="overflow-y: auto">
    @if (Request.IsAuthenticated)
    {
        List<Notification> notifications = new List<Notification>();
        string type;
        Database db = new Database();
        if (!User.IsInRole("admin"))
        {
            type = "user";
            notifications = db.Find<Notification>(Notification.MongoCollectionName, doc => doc.ForUserType == type && doc.UserName == User.Identity.GetUserName());
        }
        else
        {
            type = "admin";
            notifications = db.Find<Notification>(Notification.MongoCollectionName, doc => doc.ForUserType == type);
        }

        notifications.Sort((x, y) => DateTime.Compare(y.DateGenerated, x.DateGenerated));
        notifications.Sort((x, y) => x.Resolved.CompareTo(y.Resolved));

        Type typeOfNotification;
        object dynamicNotificationObject;
        INotifiable notificationType;

        if (notifications.Count() > 0)
        {
            foreach (var notification in notifications)
            {
                typeOfNotification = Type.GetType(notification.NotificationType + ", " + Database.AppName); // target type
                dynamicNotificationObject = Activator.CreateInstance(typeOfNotification); // an instance of target type
                notificationType = (INotifiable)dynamicNotificationObject;
                if (!notification.Resolved)
                {
                    <div class="notif-div-new">
                        <div style="padding: 10px; margin-left: 20px; margin-right: 20px">
                            <h4><strong>@Html.ActionLink(notificationType.Title, "Review", "Notifications", new { notificationId = notification.Id }, new { @class = "notif-title" })</strong></h4>
                            <p>User: @notification.UserName</p>
                            <p>Submission date: @notification.DateGenerated.ToLongDateString(), @notification.DateGenerated.ToLocalTime().ToLongTimeString()</p>
                        </div>
                    </div>
                    <br />
                }
                else
                {
                    <div class="notif-div-resolved">
                        <div style="padding: 10px; margin-left: 20px; margin-right: 20px">
                            <h4><strong>@notificationType.Title</strong></h4>
                            <p>User: @notification.UserName</p>
                            <p>Submission date: @notification.DateGenerated.ToLongDateString(), @notification.DateGenerated.ToLocalTime().ToLongTimeString()</p>
                            <p>Date resolved: @notification.DateResolved.ToLongDateString(), @notification.DateResolved.ToLocalTime().ToLongTimeString()</p>
                        </div>
                    </div>
                    <br />
                }
            }
        }
        else
        {
            <p></p>
            <p>You currently have no notifications.</p>
            <p></p>
        }
    }
</div>